apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-csi-controller
  labels:
    app: csi-controller
    helm-release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-controller
      helm-release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: csi-controller
        helm-release: {{ .Release.Name }}
        openebs.io/logging: "true"
    spec:
      hostNetwork: true
      serviceAccount: {{ .Release.Name }}-service-account
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        {{- include "base_pull_secrets" . }}
      initContainers:
        {{- include "jaeger_agent_init_container" . }}
        {{- include "rest_agent_init_container" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: csi-provisioner
          image: "{{ .Values.csi.image.registry }}/{{ .Values.csi.image.repo }}/csi-provisioner:{{ .Values.csi.image.provisionerTag }}"
          args:
            - "--v=2"
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
            - "--strict-topology=false"
            - "--default-fstype=ext4"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: {{ .Values.csi.image.pullPolicy }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: "{{ .Values.csi.image.registry }}/{{ .Values.csi.image.repo }}/csi-attacher:{{ .Values.csi.image.attacherTag }}"
          args:
            - "--v=2"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: {{ .Values.csi.image.pullPolicy }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-controller
          resources:
            limits:
              cpu: {{ .Values.csi.controller.resources.limits.cpu | quote }}
              memory: {{ .Values.csi.controller.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.csi.controller.resources.requests.cpu | quote }}
              memory: {{ .Values.csi.controller.resources.requests.memory | quote }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repo }}/{{ .Chart.Name }}-csi-controller:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--csi-socket=/var/lib/csi/sockets/pluginproxy/csi.sock"
            - "--rest-endpoint=http://{{ .Release.Name }}-api-rest:8081"{{ if .Values.base.jaeger.enabled }}
            - "--jaeger={{ .Values.base.jaeger.agent.name }}:{{ .Values.base.jaeger.agent.port }}"{{ end }}
            {{- range $key, $val := .Values.csi.node.topology.segments }}
            - "--node-selector={{ $key }}={{ $val }}"
            {{- end }}
          env:
            - name: RUST_LOG
              value: {{ .Values.csi.controller.logLevel }}
            {{- if default .Values.base.logSilenceLevel .Values.csi.controller.logSilenceLevel }}
            - name: RUST_LOG_SILENCE
              value: {{ default .Values.base.logSilenceLevel .Values.csi.controller.logSilenceLevel }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
        - name: socket-dir
          emptyDir:

